{"ast":null,"code":"var _jsxFileName = \"/home/acer/\\xC1rea de Trabalho/09-time-to-practice-starting-code/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllQuotes() {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllQuotes, \"TX91E3Ry29pOjGA3Az87eReX9Xs=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/home/acer/Área de Trabalho/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","NoQuotesFound","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,YAA7B;AAA2CC,IAAAA;AAA3C,MAAqDV,OAAO,CAACC,YAAD,EAAe,IAAf,CAAlE;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAGC,MAAM,KAAK,SAAd,EAAwB;AACpB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAGG,KAAH,EAAS;AACL,wBACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,MAAGH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAH,EAA0E;AACtE,wBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAID,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAhCuBJ,S;UACuCL,O;;;KADvCK,S","sourcesContent":["import QuoteList from '../components/quotes/QuoteList'\nimport useHttp from '../hooks/use-http'\nimport { getAllQuotes } from '../lib/api'\nimport { useEffect } from 'react'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\n\nexport default function AllQuotes() {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true)\n\n    useEffect(() =>{\n        sendRequest()\n    }, [sendRequest])\n\n    if(status === 'pending'){\n        return (\n            <div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        )\n    }\n\n    if(error){\n        return (\n            <p className='centered focused'>{error}</p>\n        )\n    }\n\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\n        return (\n            <NoQuotesFound/>\n        )\n    }\n\n\n\n    return (\n        <QuoteList quotes={loadedQuotes} />\n    )\n}"]},"metadata":{},"sourceType":"module"}