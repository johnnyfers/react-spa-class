{"ast":null,"code":"var _jsxFileName = \"/home/acer/\\xC1rea de Trabalho/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Link, Route, useParams, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuoteDetail() {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: quote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [params.quoteId, sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuoteDetail, \"JOBolN8ZmabVQQUdL1MrW+LYW4M=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/acer/Área de Trabalho/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["useEffect","Link","Route","useParams","useRouteMatch","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetail","params","match","sendRequest","status","data","quote","error","quoteId","text","author","path","url"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,YAA7B;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAMS,KAAK,GAAGR,aAAa,EAA3B;AAEA,QAAM;AAACS,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,KAA5B;AAAmCC,IAAAA;AAAnC,MAA4CT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAAzD;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,WAAW,CAACF,MAAM,CAACO,OAAR,CAAX;AACH,GAFQ,EAEP,CAACP,MAAM,CAACO,OAAR,EAAiBL,WAAjB,CAFO,CAAT;;AAIA,MAAGC,MAAM,KAAK,SAAd,EAAyB;AACrB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAGG,KAAH,EAAS;AACL,wBAAO;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACD,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACG,IAA9B;AAAoC,MAAA,MAAM,EAAEH,KAAK,CAACI;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAER,KAAK,CAACS,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,IAAGT,KAAK,CAACU,GAAI,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,WAA3B;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAeH;;GA1CuBX,W;UACLP,S,EAEDC,a,EAEoCI,O;;;KAL9BE,W","sourcesContent":["\nimport { useEffect } from 'react'\nimport { Link, Route, useParams, useRouteMatch } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport useHttp from '../hooks/use-http'\nimport {getSingleQuote} from '../lib/api'\n\nexport default function QuoteDetail() {\n    const params = useParams()\n\n    const match = useRouteMatch()\n\n    const {sendRequest, status, data: quote, error} = useHttp(getSingleQuote, true)\n\n    useEffect(()=>{\n        sendRequest(params.quoteId)\n    },[params.quoteId, sendRequest])\n\n    if(status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        )\n    }\n\n    if(error){\n        return <p>{error}</p>\n    }\n\n    if (!quote) {\n        return <p>No quote found</p>\n    }\n\n    return (\n        <>\n            <HighlightedQuote text={quote.text} author={quote.author} />\n\n            <Route path={match.path} exact>\n                <div className=\"centered\">\n                    <Link className=\"btn--flat\" to={`/${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}