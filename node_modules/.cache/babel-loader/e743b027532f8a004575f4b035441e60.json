{"ast":null,"code":"var _jsxFileName = \"/home/acer/\\xC1rea de Trabalho/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Route, useParams } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dummy_quotes = [{\n  id: 'q1',\n  author: 'max',\n  text: 'learning react'\n}, {\n  id: 'q2',\n  author: 'john',\n  text: 'learning ts'\n}];\nexport default function QuoteDetail() {\n  _s();\n\n  const params = useParams();\n  const quote = dummy_quotes.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/${params.quoteId}/comments`,\n        children: \"Load Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/acer/Área de Trabalho/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["Link","Route","useParams","Comments","HighlightedQuote","dummy_quotes","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;;AAEA,MAAMC,YAAY,GAAG,CACjB;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,KAAnB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CADiB,EAEjB;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,MAAnB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAFiB,CAArB;AAKA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAMS,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAAjD,CAAd;;AAEA,MAAG,CAACF,KAAJ,EAAU;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACA,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADA,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAG,WAAUG,MAAM,CAACG,OAAQ,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAWH;;GApBuBJ,W;UACLP,S;;;KADKO,W","sourcesContent":["import { Link, Route, useParams } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\n\nconst dummy_quotes = [\n    {id: 'q1', author: 'max', text: 'learning react'},\n    {id: 'q2', author: 'john', text: 'learning ts'}\n]\n\nexport default function QuoteDetail() {\n    const params = useParams()\n\n    const quote = dummy_quotes.find((quote) => quote.id === params.quoteId)\n\n    if(!quote){\n        return <p>No quote found</p>\n    }\n\n    return (\n        <>\n        <HighlightedQuote text={quote.text} author={quote.author}/>  \n            <div className=\"centered\">\n                <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>Load Comments</Link>\n            </div>\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments/>\n            </Route>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}